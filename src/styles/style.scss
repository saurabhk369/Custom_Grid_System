$base: #FFFFFF;
$container: #DADADA;
$light: lighten($container, 5%);
$dark: darken($container, 5%);
$default: #BCBABE;
$primary: #375E97;
$danger: #FB6542;
$info: #FFBB00;
$success: #3F681C;
$xlarge-columns: 16;
$large-columns: 12;
$mid-columns: 8;
$small-columns: 6;
$xsmall-columns: 2;
$xxsmall-columns: 1;
html {
    box-sizing: border-box;
    height: 100%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
    margin: 0;
    padding: 0;
}

body {
    background: $base;
    font-family: sans-serif;
}
.container {
    background: $container;
    width: calc(100% - 5rem);
    margin: 0 auto;
    padding: 1rem;
}

*[class*="visible"]{
    display: none;
}

.grid {
    display: grid;
    grid-template-columns: repeat($large-columns, 1fr);
    grid-auto-flow: row;
    grid-gap: 1.25rem;
    width: calc(100% - 10rem);
    margin: 0 auto;
    margin-top: 1rem;
    margin-bottom: 1rem;
}

.grid-item {
    border: 1px solid $primary;
}

.grid-item-end {
    @extend .grid-item;
    grid-column-end: -1;
}

// 1200px
@media (min-width: 75.01em) {
    .container {
        width: calc(100% - 3rem);
    }
    .grid {
        grid-template-columns: repeat($xlarge-columns, 1fr);
        width: calc(100% - 8em);
        grid-gap: 1rem;
    }
    @for $i from 1 through $xlarge-columns {
        .col-xl-#{$i} {
            grid-column: span $i;
        }
    }
    @for $i from 1 through $xlarge-columns {
        @for $j from 1 through $xlarge-columns {
            .col-xl-#{$j}-#{$i} {
                grid-column: $i / span $j;
            }
        }
    }
    .hidden-xl{
        display: none;
    }
    .visible-xl{
        display: inherit;
    }
}

// 992px
@media (max-width: 75em) {
    .container {
        width: calc(100% - 3rem);
    }
    .grid {
        grid-template-columns: repeat($large-columns, 1fr);
        width: calc(100% - 8em);
        grid-gap: 1rem;
    }
    @for $i from 1 through $large-columns {
        .col-lg-#{$i} {
            grid-column: span $i;
        }
    }
    @for $i from 1 through $large-columns {
        @for $j from 1 through $large-columns {
            .col-lg-#{$j}-#{$i} {
                grid-column: $i / span $j;
            }
        }
    }
    .hidden-lg{
        display: none;
    }
    .visible-lg{
        display: inherit;
    }
}

//between 768px and 992px
@media (min-width: 48em) and (max-width: 62em) {
    .container {
        width: calc(100% - 3rem);
    }
    .grid {
        grid-template-columns: repeat($mid-columns, 1fr);
        width: calc(100% - 8em);
        grid-gap: 1rem;
    }
    @for $i from 1 through $mid-columns {
        .col-md-#{$i} {
            grid-column: span $i;
        }
    }
    @for $i from 1 through $mid-columns {
        @for $j from 1 through $mid-columns {
            .col-md-#{$j}-#{$i} {
                grid-column: $i / span $j;
            }
        }
    }
    .hidden-md{
        display: none;
    }
    .visible-md{
        display: inherit;
    }
}

// 768px
@media (max-width: 48em) {
    .container {
        width: calc(100% - 2rem);
    }
    .grid {
        grid-template-columns: repeat($small-columns, 1fr);
        width: calc(100% - 4rem);
        margin-top: 0.5rem;
        margin-bottom: 0.5rem;
        grid-gap: 0.6rem;
    }
    @for $i from 1 through $small-columns {
        .col-sm-#{$i} {
            grid-column: span $i;
        }
    }
    @for $i from 1 through $small-columns {
        @for $j from 1 through $small-columns {
            .col-sm-#{$j}-#{$i} {
                grid-column: $i / span $j;
            }
        }
    }
    .hidden-sm{
        display: none;
    }
    .visible-sm{
        display: inherit;
    }
}

// 480px
@media (max-width: 30em) {
    .container {
        width: calc(100% - 2rem);
    }
    .grid {
        grid-template-columns: repeat($xsmall-columns, 1fr);
        width: calc(100% - 4rem);
        margin-top: 0.5rem;
        margin-bottom: 0.5rem;
        grid-gap: 0.6rem;
    }
    @for $i from 1 through $xsmall-columns {
        .col-xs-#{$i} {
            grid-column: span $i;
        }
    }
    .hidden-xs{
        display: none;
    }
    .visible-xs{
        display: inherit;
    }
}

// 320px
@media (max-width: 20em) {
    .container {
        width: calc(100%);
    }
    .grid {
        grid-template-columns: 1fr;
        width: calc(100% - 1rem);
        margin-top: 0.5rem;
        grid-gap: 0.3rem;
    }
    .grid-item {
        grid-column: 1;
    }
    .hidden-xxs{
        display: none;
    }
    .visible-xxs{
        display: inherit;
    }
}

// // 1200px
// @media (min-width: 75.01em) {
//     .container {
//         width: calc(100% - 3rem);
//     }
//     .grid {
//         grid-template-columns: repeat($xlarge-columns, 1fr);
//         width: calc(100% - 8em);
//         grid-gap: 1rem;
//     }
// }

// // 992px
// @media (max-width: 75em) {
//     .container {
//         width: calc(100% - 3rem);
//     }
//     .grid {
//         grid-template-columns: repeat($large-columns, 1fr);
//         width: calc(100% - 8em);
//         grid-gap: 1rem;
//     }
// }

// //between 768px and 992px
// @media (min-width: 48em) and (max-width: 62em) {
//     .container {
//         width: calc(100% - 3rem);
//     }
//     .grid {
//         grid-template-columns: repeat($mid-columns, 1fr);
//         width: calc(100% - 8em);
//         grid-gap: 1rem;
//     }
// }

// // 768px
// @media (max-width: 48em) {
//     .container {
//         width: calc(100% - 2rem);
//     }
//     .grid {
//         grid-template-columns: repeat($small-columns, 1fr);
//         width: calc(100% - 4rem);
//         margin-top: 0.5rem;
//         margin-bottom: 0.5rem;
//         grid-gap: 0.6rem;
//     }
// }

// // 480px
// @media (max-width: 30em) {
//     .container {
//         width: calc(100% - 2rem);
//     }
//     .grid {
//         grid-template-columns: repeat($xsmall-columns, 1fr);
//         width: calc(100% - 4rem);
//         margin-top: 0.5rem;
//         margin-bottom: 0.5rem;
//         grid-gap: 0.6rem;
//     }
// }

// // 320px
// @media (max-width: 20em) {
//     .container {
//         width: calc(100%);
//     }
//     .grid {
//         grid-template-columns: 1fr;
//         width: calc(100% - 1rem);
//         margin-top: 0.5rem;
//         grid-gap: 0.3rem;
//     }
//     .grid-item {
//         grid-column: 1;
//     }
// }

@for $i from 1 through $xlarge-columns {
    .col-#{$i} {
        grid-column: span $i;
    }
}
@for $i from 1 through $xlarge-columns {
    @for $j from 1 through $xlarge-columns {
        .col-#{$j}-#{$i} {
            grid-column: $i / span $j;
        }
    }
}

@for $i from 1 through $xlarge-columns {
    .grid-xxs-#{$i} {
        @extend .grid;
        grid-template-columns: repeat($i, 1fr);
    }
    .grid-xs-#{$i} {
        @extend .grid;
        grid-template-columns: repeat($i, 1fr);
    }
    .grid-sm-#{$i} {
        @extend .grid;
        grid-template-columns: repeat($i, 1fr);
    }
    .grid-md-#{$i} {
        @extend .grid;
        grid-template-columns: repeat($i, 1fr);
    }
    .grid-lg-#{$i} {
        @extend .grid;
        grid-template-columns: repeat($i, 1fr);
    }
    .grid-xl-#{$i} {
        @extend .grid;
        grid-template-columns: repeat($i, 1fr);
    }
    .grid-#{$i} {
        @extend .grid;
        grid-template-columns: repeat($i, 1fr);
    }
}

.grid-flow-row {
    grid-auto-flow: row;
}

.grid-flow-column {
    grid-auto-flow: column;
}

.no-gutter {
    @extend .grid;
    grid-gap: 0em;
}

.fill {
    // @extend .grid;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

.default {
    background: $default;
}

.primary {
    background: $primary;
}

.info {
    background: $info;
}

.success {
    background: $success;
}

.danger {
    background: $danger;
}

.light {
    background: $light;
}

.dark {
    background: $dark;
}

.tooltip {
    position: relative;
}

.tooltip:hover::before {
    content: '';
    position: absolute;
    // left: 50%;
    top: 100%;
    transform: rotateZ(45deg) translateX(0.5rem) ;
    color: black;
    background: white;
    width: 1rem;
    height: 1rem;
}

.tooltip:hover::after {
    content: attr(data-tooltip);
    position: absolute;
    // left: 50%;
    white-space: normal;
    top: 100%;
    transform: translate(-1rem, 0.5rem);
    background: white;
    color: black;
    padding: 0.2rem;
    border-radius: 0.1rem;
    box-shadow: 0 0.2rem 0.1rem 0.1rem $dark;
}